// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HEADER should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    activateLogin={[MockFunction]}
    searchMovies={[MockFunction]}
    user={
      Object {
        "email": "graham@aol.com",
        "favorites": Array [
          "Venom",
        ],
        "id": 2,
        "name": "Graham",
        "password": "123",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/"
        >
          <img
            alt="home logo"
            className="logo"
            src="logo.svg"
          />
        </Link>,
        <div
          className="controls-container"
        >
          <form
            className="search-form"
            role="search"
          >
            <label>
              <input
                autoComplete="off"
                className="search-field"
                onChange={[Function]}
                placeholder="Search movies"
                style={
                  Object {
                    "backgroundImage": "url(search-icon.svg)",
                  }
                }
                type="search"
              />
            </label>
            <input
              className="search-submit"
              type="submit"
            />
          </form>
          <img
            alt="user tile"
            className="tile"
            onClick={[Function]}
            src="superhero-a.svg"
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <img
            alt="home logo"
            className="logo"
            src="logo.svg"
          />,
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "home logo",
            "className": "logo",
            "src": "logo.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              className="search-form"
              role="search"
            >
              <label>
                <input
                  autoComplete="off"
                  className="search-field"
                  onChange={[Function]}
                  placeholder="Search movies"
                  style={
                    Object {
                      "backgroundImage": "url(search-icon.svg)",
                    }
                  }
                  type="search"
                />
              </label>
              <input
                className="search-submit"
                type="submit"
              />
            </form>,
            <img
              alt="user tile"
              className="tile"
              onClick={[Function]}
              src="superhero-a.svg"
            />,
            false,
          ],
          "className": "controls-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label>
                  <input
                    autoComplete="off"
                    className="search-field"
                    onChange={[Function]}
                    placeholder="Search movies"
                    style={
                      Object {
                        "backgroundImage": "url(search-icon.svg)",
                      }
                    }
                    type="search"
                  />
                </label>,
                <input
                  className="search-submit"
                  type="submit"
                />,
              ],
              "className": "search-form",
              "role": "search",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    autoComplete="off"
                    className="search-field"
                    onChange={[Function]}
                    placeholder="Search movies"
                    style={
                      Object {
                        "backgroundImage": "url(search-icon.svg)",
                      }
                    }
                    type="search"
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoComplete": "off",
                    "className": "search-field",
                    "onChange": [Function],
                    "placeholder": "Search movies",
                    "style": Object {
                      "backgroundImage": "url(search-icon.svg)",
                    },
                    "type": "search",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "search-submit",
                  "type": "submit",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "user tile",
              "className": "tile",
              "onClick": [Function],
              "src": "superhero-a.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          false,
        ],
        "type": "div",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/"
          >
            <img
              alt="home logo"
              className="logo"
              src="logo.svg"
            />
          </Link>,
          <div
            className="controls-container"
          >
            <form
              className="search-form"
              role="search"
            >
              <label>
                <input
                  autoComplete="off"
                  className="search-field"
                  onChange={[Function]}
                  placeholder="Search movies"
                  style={
                    Object {
                      "backgroundImage": "url(search-icon.svg)",
                    }
                  }
                  type="search"
                />
              </label>
              <input
                className="search-submit"
                type="submit"
              />
            </form>
            <img
              alt="user tile"
              className="tile"
              onClick={[Function]}
              src="superhero-a.svg"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <img
              alt="home logo"
              className="logo"
              src="logo.svg"
            />,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "home logo",
              "className": "logo",
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <form
                className="search-form"
                role="search"
              >
                <label>
                  <input
                    autoComplete="off"
                    className="search-field"
                    onChange={[Function]}
                    placeholder="Search movies"
                    style={
                      Object {
                        "backgroundImage": "url(search-icon.svg)",
                      }
                    }
                    type="search"
                  />
                </label>
                <input
                  className="search-submit"
                  type="submit"
                />
              </form>,
              <img
                alt="user tile"
                className="tile"
                onClick={[Function]}
                src="superhero-a.svg"
              />,
              false,
            ],
            "className": "controls-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label>
                    <input
                      autoComplete="off"
                      className="search-field"
                      onChange={[Function]}
                      placeholder="Search movies"
                      style={
                        Object {
                          "backgroundImage": "url(search-icon.svg)",
                        }
                      }
                      type="search"
                    />
                  </label>,
                  <input
                    className="search-submit"
                    type="submit"
                  />,
                ],
                "className": "search-form",
                "role": "search",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <input
                      autoComplete="off"
                      className="search-field"
                      onChange={[Function]}
                      placeholder="Search movies"
                      style={
                        Object {
                          "backgroundImage": "url(search-icon.svg)",
                        }
                      }
                      type="search"
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "autoComplete": "off",
                      "className": "search-field",
                      "onChange": [Function],
                      "placeholder": "Search movies",
                      "style": Object {
                        "backgroundImage": "url(search-icon.svg)",
                      },
                      "type": "search",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "search-submit",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "form",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "user tile",
                "className": "tile",
                "onClick": [Function],
                "src": "superhero-a.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            false,
          ],
          "type": "div",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
